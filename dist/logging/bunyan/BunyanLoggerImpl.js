"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BunyanLoggerImpl = void 0;
const Bunyan = require("bunyan");
class BunyanLoggerImpl {
    constructor({ name, level }) {
        this.name = name;
        this.level = level;
        this.LOG = Bunyan.createLogger({
            name: this.name,
            level: this.level,
            serializers: {
                ...Bunyan.stdSerializers,
            },
        });
    }
    trace(opts) {
        if (opts.error) {
            this.LOG.trace({ err: opts.error, ...opts.data }, opts.message);
        }
        else {
            this.LOG.trace(opts.message);
        }
    }
    debug(opts) {
        if (opts.error) {
            this.LOG.debug({ err: opts.error, ...opts.data }, opts.message);
        }
        else {
            this.LOG.debug(opts.message);
        }
    }
    info(opts) {
        if (opts.error) {
            this.LOG.info({ err: opts.error, ...opts.data }, opts.message);
        }
        else {
            this.LOG.info(opts.message);
        }
    }
    warn(opts) {
        if (opts.error) {
            this.LOG.warn({ err: opts.error, ...opts.data }, opts.message);
        }
        else {
            this.LOG.warn(opts.message);
        }
    }
    error(opts) {
        if (opts.error) {
            this.LOG.error({ err: opts.error, ...opts.data }, opts.message);
        }
        else {
            this.LOG.error(opts.message);
        }
    }
    fatal(opts) {
        if (opts.error) {
            this.LOG.fatal({ err: opts.error, ...opts.data }, opts.message);
        }
        else {
            this.LOG.fatal(opts.message);
        }
    }
}
exports.BunyanLoggerImpl = BunyanLoggerImpl;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQnVueWFuTG9nZ2VySW1wbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9sb2dnaW5nL2J1bnlhbi9CdW55YW5Mb2dnZXJJbXBsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLGlDQUFpQztBQUVqQyxNQUFhLGdCQUFnQjtJQUkzQixZQUFZLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBNEM7UUFDbkUsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLEdBQUcsR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDO1lBQzdCLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSTtZQUNmLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSztZQUNqQixXQUFXLEVBQUU7Z0JBQ1gsR0FBRyxNQUFNLENBQUMsY0FBYzthQUV6QjtTQUNGLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxLQUFLLENBQUMsSUFBbUI7UUFDdkIsSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ2QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxHQUFHLElBQUksQ0FBQyxJQUFJLEVBQUUsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDakU7YUFBTTtZQUNMLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUM5QjtJQUNILENBQUM7SUFDRCxLQUFLLENBQUMsSUFBbUI7UUFDdkIsSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ2QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxHQUFHLElBQUksQ0FBQyxJQUFJLEVBQUUsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDakU7YUFBTTtZQUNMLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUM5QjtJQUNILENBQUM7SUFDRCxJQUFJLENBQUMsSUFBbUI7UUFDdEIsSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ2QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxHQUFHLElBQUksQ0FBQyxJQUFJLEVBQUUsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDaEU7YUFBTTtZQUNMLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUM3QjtJQUNILENBQUM7SUFFRCxJQUFJLENBQUMsSUFBbUI7UUFDdEIsSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ2QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxHQUFHLElBQUksQ0FBQyxJQUFJLEVBQUUsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDaEU7YUFBTTtZQUNMLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUM3QjtJQUNILENBQUM7SUFDRCxLQUFLLENBQUMsSUFBbUI7UUFDdkIsSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ2QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxHQUFHLElBQUksQ0FBQyxJQUFJLEVBQUUsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDakU7YUFBTTtZQUNMLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUM5QjtJQUNILENBQUM7SUFDRCxLQUFLLENBQUMsSUFBbUI7UUFDdkIsSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ2QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxHQUFHLElBQUksQ0FBQyxJQUFJLEVBQUUsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDakU7YUFBTTtZQUNMLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUM5QjtJQUNILENBQUM7Q0FDRjtBQTVERCw0Q0E0REMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMb2dnZXIsIExvZ01ldGhvZE9wdHMgfSBmcm9tIFwiLi4vTG9nZ2VyXCI7XG5pbXBvcnQgKiBhcyBCdW55YW4gZnJvbSBcImJ1bnlhblwiO1xuXG5leHBvcnQgY2xhc3MgQnVueWFuTG9nZ2VySW1wbCBpbXBsZW1lbnRzIExvZ2dlciB7XG4gIHByaXZhdGUgcmVhZG9ubHkgbmFtZTogc3RyaW5nO1xuICBwcml2YXRlIHJlYWRvbmx5IGxldmVsOiBCdW55YW4uTG9nTGV2ZWw7XG4gIHByaXZhdGUgcmVhZG9ubHkgTE9HOiBCdW55YW47XG4gIGNvbnN0cnVjdG9yKHsgbmFtZSwgbGV2ZWwgfTogeyBuYW1lOiBzdHJpbmc7IGxldmVsOiBCdW55YW4uTG9nTGV2ZWwgfSkge1xuICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgdGhpcy5sZXZlbCA9IGxldmVsO1xuICAgIHRoaXMuTE9HID0gQnVueWFuLmNyZWF0ZUxvZ2dlcih7XG4gICAgICBuYW1lOiB0aGlzLm5hbWUsXG4gICAgICBsZXZlbDogdGhpcy5sZXZlbCxcbiAgICAgIHNlcmlhbGl6ZXJzOiB7XG4gICAgICAgIC4uLkJ1bnlhbi5zdGRTZXJpYWxpemVycyxcbiAgICAgICAgLy8gZ2F0ZXdheUV2ZW50OiBnYXRld2F5RXZlbnRTZXJpYWxpemVyLFxuICAgICAgfSxcbiAgICB9KTtcbiAgfVxuXG4gIHRyYWNlKG9wdHM6IExvZ01ldGhvZE9wdHMpOiB2b2lkIHtcbiAgICBpZiAob3B0cy5lcnJvcikge1xuICAgICAgdGhpcy5MT0cudHJhY2UoeyBlcnI6IG9wdHMuZXJyb3IsIC4uLm9wdHMuZGF0YSB9LCBvcHRzLm1lc3NhZ2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLkxPRy50cmFjZShvcHRzLm1lc3NhZ2UpO1xuICAgIH1cbiAgfVxuICBkZWJ1ZyhvcHRzOiBMb2dNZXRob2RPcHRzKTogdm9pZCB7XG4gICAgaWYgKG9wdHMuZXJyb3IpIHtcbiAgICAgIHRoaXMuTE9HLmRlYnVnKHsgZXJyOiBvcHRzLmVycm9yLCAuLi5vcHRzLmRhdGEgfSwgb3B0cy5tZXNzYWdlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5MT0cuZGVidWcob3B0cy5tZXNzYWdlKTtcbiAgICB9XG4gIH1cbiAgaW5mbyhvcHRzOiBMb2dNZXRob2RPcHRzKTogdm9pZCB7XG4gICAgaWYgKG9wdHMuZXJyb3IpIHtcbiAgICAgIHRoaXMuTE9HLmluZm8oeyBlcnI6IG9wdHMuZXJyb3IsIC4uLm9wdHMuZGF0YSB9LCBvcHRzLm1lc3NhZ2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLkxPRy5pbmZvKG9wdHMubWVzc2FnZSk7XG4gICAgfVxuICB9XG5cbiAgd2FybihvcHRzOiBMb2dNZXRob2RPcHRzKTogdm9pZCB7XG4gICAgaWYgKG9wdHMuZXJyb3IpIHtcbiAgICAgIHRoaXMuTE9HLndhcm4oeyBlcnI6IG9wdHMuZXJyb3IsIC4uLm9wdHMuZGF0YSB9LCBvcHRzLm1lc3NhZ2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLkxPRy53YXJuKG9wdHMubWVzc2FnZSk7XG4gICAgfVxuICB9XG4gIGVycm9yKG9wdHM6IExvZ01ldGhvZE9wdHMpOiB2b2lkIHtcbiAgICBpZiAob3B0cy5lcnJvcikge1xuICAgICAgdGhpcy5MT0cuZXJyb3IoeyBlcnI6IG9wdHMuZXJyb3IsIC4uLm9wdHMuZGF0YSB9LCBvcHRzLm1lc3NhZ2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLkxPRy5lcnJvcihvcHRzLm1lc3NhZ2UpO1xuICAgIH1cbiAgfVxuICBmYXRhbChvcHRzOiBMb2dNZXRob2RPcHRzKTogdm9pZCB7XG4gICAgaWYgKG9wdHMuZXJyb3IpIHtcbiAgICAgIHRoaXMuTE9HLmZhdGFsKHsgZXJyOiBvcHRzLmVycm9yLCAuLi5vcHRzLmRhdGEgfSwgb3B0cy5tZXNzYWdlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5MT0cuZmF0YWwob3B0cy5tZXNzYWdlKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==